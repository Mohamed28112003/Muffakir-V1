{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Graduation%20Project/Local/Frontend/muffakirv2/src/components/ThemeToggle.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { FaMoon, FaSun } from 'react-icons/fa';\r\nfunction ThemeToggle() {\r\n\r\n  const [darkMode, setDarkMode] = useState<boolean>(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('theme') === 'dark';\r\n    }\r\n    return false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    setDarkMode(savedTheme === 'dark');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.setAttribute('theme', 'dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      document.documentElement.setAttribute('theme', 'light');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  }, [darkMode]);\r\n  \r\n\r\n  return (\r\n    <button \r\n      className=\"theme-toggle\"\r\n      onClick={() => setDarkMode(!darkMode)}\r\n      aria-label={darkMode ? 'Switch to light mode' : 'Switch to dark mode'}\r\n    >\r\n      {darkMode ? <FaSun size={20} /> : <FaMoon size={20} />}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ThemeToggle;"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAKA,SAAS;IAEP,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;QAChD,uCAAmC;;QAEnC;QACA,OAAO;IACT;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,YAAY,eAAe;IAC7B,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,UAAU;YACZ,SAAS,eAAe,CAAC,YAAY,CAAC,SAAS;YAC/C,aAAa,OAAO,CAAC,SAAS;QAChC,OAAO;YACL,SAAS,eAAe,CAAC,YAAY,CAAC,SAAS;YAC/C,aAAa,OAAO,CAAC,SAAS;QAChC;IACF,GAAG;QAAC;KAAS;IAGb,qBACE,8OAAC;QACC,WAAU;QACV,SAAS,IAAM,YAAY,CAAC;QAC5B,cAAY,WAAW,yBAAyB;kBAE/C,yBAAW,8OAAC,8IAAA,CAAA,QAAK;YAAC,MAAM;;;;;iCAAS,8OAAC,8IAAA,CAAA,SAAM;YAAC,MAAM;;;;;;;;;;;AAGtD;uCAEe"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Graduation%20Project/Local/Frontend/muffakirv2/src/components/LanguageToggle.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { FaGlobe } from 'react-icons/fa';\r\n\r\nfunction LanguageToggle({ lang, onToggle }: { lang: string; onToggle: () => void }) {\r\n  return (\r\n    <button \r\n      className=\"language-toggle\"\r\n      onClick={onToggle}\r\n      aria-label=\"Toggle language\"\r\n    >\r\n      <FaGlobe size={20} />\r\n      <span>{lang === 'en' ? 'AR' : 'EN'}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default LanguageToggle;"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKA,SAAS,eAAe,EAAE,IAAI,EAAE,QAAQ,EAA0C;IAChF,qBACE,8OAAC;QACC,WAAU;QACV,SAAS;QACT,cAAW;;0BAEX,8OAAC,8IAAA,CAAA,UAAO;gBAAC,MAAM;;;;;;0BACf,8OAAC;0BAAM,SAAS,OAAO,OAAO;;;;;;;;;;;;AAGpC;uCAEe"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Graduation%20Project/Local/Frontend/muffakirv2/src/translations/translations.ts"],"sourcesContent":["const translations = {\r\n    en: {\r\n      welcome: \"Welcome to Muffakir\",\r\n      useNow: \"Use Muffakir Now\",\r\n      signIn: \"Sign In\",\r\n      typeMessage: \"Type your message here...\",\r\n      search: \"Search\",\r\n      documents: \"Documents\",\r\n      test: \"Test Yourself\",\r\n      testTitle: \"Knowledge Test\",\r\n      question: \"Question\",\r\n      of: \"of\",\r\n      previous: \"Previous\",\r\n      next: \"Next\",\r\n      submit: \"Submit Test\",\r\n      yourScore: \"Your Score:\",\r\n      tryAgain: \"Try Again\",\r\n      question1: \"What is the capital of France?\",\r\n      option1a: \"Paris\",\r\n      option1b: \"London\",\r\n      option1c: \"Berlin\",\r\n      option1d: \"Madrid\",\r\n      question2: \"What is the largest planet in our Solar System?\",\r\n      option2a: \"Jupiter\",\r\n      option2b: \"Saturn\",\r\n      option2c: \"Earth\",\r\n      option2d: \"Mars\",\r\n      guest: \"Guest\",\r\n    },\r\n    ar: {\r\n      welcome: \"مرحبا بكم في مفكر\",\r\n      useNow: \"استخدم مفكر الآن\",\r\n      signIn: \"تسجيل الدخول\",\r\n      typeMessage: \"اكتب رسالتك هنا...\",\r\n      search: \"بحث\",\r\n      documents: \"المستندات\",\r\n      test: \"اختبر نفسك\",\r\n      testTitle: \"اختبار المعرفة\",\r\n      question: \"السؤال\",\r\n      of: \"من\",\r\n      previous: \"السابق\",\r\n      next: \"التالي\",\r\n      submit: \"تقديم الإجابات\",\r\n      yourScore: \"نتيجتك:\",\r\n      tryAgain: \"إعادة المحاولة\",\r\n      question1: \"ما هي عاصمة فرنسا؟\",\r\n      option1a: \"باريس\",\r\n      option1b: \"لندن\",\r\n      option1c: \"برلين\",\r\n      option1d: \"مدريد\",\r\n      question2: \"ما هو أكبر كوكب في المجموعة الشمسية؟\",\r\n      option2a: \"المشتري\",\r\n      option2b: \"زحل\",\r\n      option2c: \"الأرض\",\r\n      option2d: \"المريخ\",\r\n      guest: \"زائر\",\r\n    },\r\n  };\r\n\r\nexport default translations;"],"names":[],"mappings":";;;AAAA,MAAM,eAAe;IACjB,IAAI;QACF,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,aAAa;QACb,QAAQ;QACR,WAAW;QACX,MAAM;QACN,WAAW;QACX,UAAU;QACV,IAAI;QACJ,UAAU;QACV,MAAM;QACN,QAAQ;QACR,WAAW;QACX,UAAU;QACV,WAAW;QACX,UAAU;QACV,UAAU;QACV,UAAU;QACV,UAAU;QACV,WAAW;QACX,UAAU;QACV,UAAU;QACV,UAAU;QACV,UAAU;QACV,OAAO;IACT;IACA,IAAI;QACF,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,aAAa;QACb,QAAQ;QACR,WAAW;QACX,MAAM;QACN,WAAW;QACX,UAAU;QACV,IAAI;QACJ,UAAU;QACV,MAAM;QACN,QAAQ;QACR,WAAW;QACX,UAAU;QACV,WAAW;QACX,UAAU;QACV,UAAU;QACV,UAAU;QACV,UAAU;QACV,WAAW;QACX,UAAU;QACV,UAAU;QACV,UAAU;QACV,UAAU;QACV,OAAO;IACT;AACF;uCAEa"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Graduation%20Project/Local/Frontend/muffakirv2/src/components/UserProfile.tsx"],"sourcesContent":["import React from 'react';\r\nimport { PiStudentBold } from \"react-icons/pi\";\r\n\r\nconst UserProfile = ({guest} : {guest : string}) => {\r\n\r\n  return (\r\n    <div className='profile'>\r\n        {guest}\r\n        <PiStudentBold size={32} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,cAAc,CAAC,EAAC,KAAK,EAAoB;IAE7C,qBACE,8OAAC;QAAI,WAAU;;YACV;0BACD,8OAAC,8IAAA,CAAA,gBAAa;gBAAC,MAAM;;;;;;;;;;;;AAG7B;uCAEe"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Graduation%20Project/Local/Frontend/muffakirv2/src/components/Test.tsx"],"sourcesContent":["'use client';\r\nimport Link from \"next/link\";\r\nimport ThemeToggle from \"../components/ThemeToggle\";\r\nimport LanguageToggle from \"../components/LanguageToggle\";\r\nimport translations from \"../translations/translations\";\r\nimport { useEffect, useState } from \"react\";\r\nimport UserProfile from \"../components/UserProfile\";\r\nimport React from \"react\";\r\n\r\ntype Question = {\r\n  id: number;\r\n  text: string;\r\n  options: string[];\r\n  correctAnswer: string;\r\n};\r\n\r\nfunction TestPage() {\r\n  const [lang, setLang] = useState<'en' | 'ar'>('en');\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState<string[]>([]);\r\n  const [score, setScore] = useState<number | null>(null);\r\n\r\n  // Sample questions - replace with your actual questions\r\n  const questions: Question[] = [\r\n    {\r\n      id: 1,\r\n      text: translations[lang].question1,\r\n      options: [\r\n        translations[lang].option1a,\r\n        translations[lang].option1b,\r\n        translations[lang].option1c,\r\n        translations[lang].option1d,\r\n      ],\r\n      correctAnswer: translations[lang].option1a,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: translations[lang].question2, // new question text key\r\n      options: [\r\n        translations[lang].option2a,  // new option keys\r\n        translations[lang].option2b,\r\n        translations[lang].option2c,\r\n        translations[lang].option2d,\r\n      ],\r\n      correctAnswer: translations[lang].option2a,\r\n    },\r\n    // you can add more questions as needed...\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const savedLang = localStorage.getItem('lang') === 'ar' ? 'ar' : 'en';\r\n    setLang(savedLang);\r\n    document.documentElement.setAttribute('lang', savedLang);\r\n  }, []);\r\n\r\n  const handleLanguageChange = () => {\r\n    const newLang = lang === 'en' ? 'ar' : 'en';\r\n    setLang(newLang);\r\n    localStorage.setItem('lang', newLang);\r\n    document.documentElement.setAttribute('lang', newLang);\r\n  };\r\n\r\n  const handleAnswerSelect = (answer: string) => {\r\n    const newAnswers = [...userAnswers];\r\n    newAnswers[currentQuestion] = answer;\r\n    setUserAnswers(newAnswers);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handlePreviousQuestion = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    const correct = questions.filter((q, index) => \r\n      userAnswers[index] === q.correctAnswer\r\n    ).length;\r\n    setScore(correct);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <main className='container'>\r\n      <ThemeToggle />\r\n      <LanguageToggle lang={lang} onToggle={handleLanguageChange} />\r\n      <UserProfile guest={translations[lang].guest}/>\r\n\r\n      <div className=\"test-container\">\r\n        <Link href=\"/\" className=\"title-link\">\r\n          <h1 className=\"title\">{translations[lang].testTitle}</h1>\r\n        </Link>\r\n\r\n        {score === null ? (\r\n          <div className=\"question-container\">\r\n            <div className=\"progress\">\r\n              {translations[lang].question} {currentQuestion + 1} {translations[lang].of} {questions.length}\r\n            </div>\r\n\r\n            <div className=\"question-card\">\r\n              <h3>{questions[currentQuestion].text}</h3>\r\n              <div className=\"options-container\">\r\n                {questions[currentQuestion].options.map((option, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className={`option-button ${\r\n                      userAnswers[currentQuestion] === option ? 'selected' : ''\r\n                    }`}\r\n                    onClick={() => handleAnswerSelect(option)}\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"navigation-buttons\">\r\n              <button\r\n                className=\"nav-button prev-button\"\r\n                onClick={handlePreviousQuestion}\r\n                disabled={currentQuestion === 0}\r\n              >\r\n                {translations[lang].previous}\r\n              </button>\r\n              \r\n              {currentQuestion < questions.length - 1 ? (\r\n                <button\r\n                  className=\"nav-button next-button\"\r\n                  onClick={handleNextQuestion}\r\n                >\r\n                  {translations[lang].next}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"nav-button submit-button\"\r\n                  onClick={calculateScore}\r\n                >\r\n                  {translations[lang].submit}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"result-container\">\r\n            <h2>{translations[lang].yourScore} {score}/{questions.length}</h2>\r\n            <button\r\n              className=\"restart-button\"\r\n              onClick={() => {\r\n                setCurrentQuestion(0);\r\n                setUserAnswers([]);\r\n                setScore(null);\r\n              }}\r\n            >\r\n              {translations[lang].tryAgain}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      </main>\r\n  );\r\n}\r\n\r\nexport default TestPage;"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;AAgBA,SAAS;IACP,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC3D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,wDAAwD;IACxD,MAAM,YAAwB;QAC5B;YACE,IAAI;YACJ,MAAM,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,SAAS;YAClC,SAAS;gBACP,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;gBAC3B,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;gBAC3B,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;gBAC3B,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;aAC5B;YACD,eAAe,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;QAC5C;QACA;YACE,IAAI;YACJ,MAAM,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,SAAS;YAClC,SAAS;gBACP,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;gBAC3B,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;gBAC3B,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;gBAC3B,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;aAC5B;YACD,eAAe,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;QAC5C;KAED;IAED,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,OAAO,CAAC,YAAY,OAAO,OAAO;QACjE,QAAQ;QACR,SAAS,eAAe,CAAC,YAAY,CAAC,QAAQ;IAChD,GAAG,EAAE;IAEL,MAAM,uBAAuB;QAC3B,MAAM,UAAU,SAAS,OAAO,OAAO;QACvC,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ;QAC7B,SAAS,eAAe,CAAC,YAAY,CAAC,QAAQ;IAChD;IAEA,MAAM,qBAAqB,CAAC;QAC1B,MAAM,aAAa;eAAI;SAAY;QACnC,UAAU,CAAC,gBAAgB,GAAG;QAC9B,eAAe;IACjB;IAEA,MAAM,qBAAqB;QACzB,IAAI,kBAAkB,UAAU,MAAM,GAAG,GAAG;YAC1C,mBAAmB,CAAA,OAAQ,OAAO;QACpC;IACF;IAEA,MAAM,yBAAyB;QAC7B,IAAI,kBAAkB,GAAG;YACvB,mBAAmB,CAAA,OAAQ,OAAO;QACpC;IACF;IAEA,MAAM,iBAAiB;QACrB,MAAM,UAAU,UAAU,MAAM,CAAC,CAAC,GAAG,QACnC,WAAW,CAAC,MAAM,KAAK,EAAE,aAAa,EACtC,MAAM;QACR,SAAS;IACX;IAIA,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC,iIAAA,CAAA,UAAW;;;;;0BACZ,8OAAC,oIAAA,CAAA,UAAc;gBAAC,MAAM;gBAAM,UAAU;;;;;;0BACtC,8OAAC,iIAAA,CAAA,UAAW;gBAAC,OAAO,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,KAAK;;;;;;0BAE5C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;kCACvB,cAAA,8OAAC;4BAAG,WAAU;sCAAS,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,SAAS;;;;;;;;;;;oBAGpD,UAAU,qBACT,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;oCACZ,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;oCAAC;oCAAE,kBAAkB;oCAAE;oCAAE,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,EAAE;oCAAC;oCAAE,UAAU,MAAM;;;;;;;0CAG/F,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAI,SAAS,CAAC,gBAAgB,CAAC,IAAI;;;;;;kDACpC,8OAAC;wCAAI,WAAU;kDACZ,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,sBAC/C,8OAAC;gDAEC,WAAW,CAAC,cAAc,EACxB,WAAW,CAAC,gBAAgB,KAAK,SAAS,aAAa,IACvD;gDACF,SAAS,IAAM,mBAAmB;0DAEjC;+CANI;;;;;;;;;;;;;;;;0CAYb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,WAAU;wCACV,SAAS;wCACT,UAAU,oBAAoB;kDAE7B,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;;;;;;oCAG7B,kBAAkB,UAAU,MAAM,GAAG,kBACpC,8OAAC;wCACC,WAAU;wCACV,SAAS;kDAER,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,IAAI;;;;;6DAG1B,8OAAC;wCACC,WAAU;wCACV,SAAS;kDAER,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,MAAM;;;;;;;;;;;;;;;;;6CAMlC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;oCAAI,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,SAAS;oCAAC;oCAAE;oCAAM;oCAAE,UAAU,MAAM;;;;;;;0CAC5D,8OAAC;gCACC,WAAU;gCACV,SAAS;oCACP,mBAAmB;oCACnB,eAAe,EAAE;oCACjB,SAAS;gCACX;0CAEC,mIAAA,CAAA,UAAY,CAAC,KAAK,CAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;AAO1C;uCAEe"}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}